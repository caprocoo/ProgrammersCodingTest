1. 중재자 패턴이란?
    - 중자재 패턴은 객체 간의 혼란스러운 의존 관계들을 줄일 수 있는 행동 디자인 패턴이다.
    - 객체의 관계를 하나의 객체로 정리하며 서로 의존적인 M:N 관계를 가진 객체를 느슨한 1:1 관계로 변경한다.
    - 모든 클래스간의 복잡한 로직(상호작용)을 캡슐화하여 하나의 클래스에 위임하여 처리하는 패턴이다.

2. 구성요소
    1) Mediator
        - 동료 간 통신을 위한 인터페이스이다.
    2) Colleague
        - 동료 간에 전달되는 이벤트를 정의하는 추상 클래스이다.
    3) ConcreteMediator
        - Colleague 객체를 조정하여 협동 조작을 구현하고 동료를 유지 및 관리한다.
    4) ConcreteColleague
        - 다른 Colleague가 생성한 Mediator를 통해 받은 알림 작업을 구현한다.

3. 장점
    - 단일 책임 원칙
    - 개방 / 폐쇄 원칙
    - 다양한 컴포넌트 간의 결합도를 줄일 수 있다.
    - 개별 컴포넌트들을 더 쉽게 재사용할 수 있다.

4. 단점
    - 중재자는 전지전능한 객체로 발전할지도 모른다.


5. 예제
    - 예제 소스 : - src/theory/java/source/gof/behavioral/mediator/Main.java 참조


* 출처 : - https://refactoring.guru/ko/design-patterns/mediator
        - https://hirlawldo.tistory.com/180
        - https://velog.io/@cham/Design-Pattern-%EC%A4%91%EC%9E%AC%EC%9E%90-%ED%8C%A8%ED%84%B4Mediator-Pattern


