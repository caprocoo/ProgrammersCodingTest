1. 상태 패턴이란?
    - 상태 패턴은 객체의 내부 상태가 변경될 때 해당 객체가 그의 행동을 변경할 수 있도록 하는 행동 디자인 패턴이다.
    - 객체가 행동을 변경할 때 객체가 클래스를 변경한 것처럼 보일 수 있다.
    - 객체의 특정 상태를 클래스로 선언하고, 클래스에서는 해당 상태에서 할 수 있는 행위들을 메서드로 정의한다.
      그리고 이러한 각 상태 클래스들을 인터페이스로 캡슐화하여 클라이언트에서 인터페이스를 호출하는 방식을 말한다.

2. 장점
    - 단일 책임 원칙
    - 개방 / 폐쇄 원칙
    - 조건문들을 제거하여 context 의 코드를 단순화한다.

3. 단점
    - 몇 가지 상태만 있거나 거의 변경되지 않을 때 상태 패턴을 적용하는 것은 과도할 수 있다.


4. 예제
    - 예제 소스 : - src/theory/java/source/gof/behavioral/state/Main.java 참조


* 출처 : - https://refactoring.guru/ko/design-patterns/state
        - https://victorydntmd.tistory.com/294


