1. 프록시 패턴이란?
    - 프록시는 우리말로 대리자, 대변인이라는 뜻으로, 프록시 패턴은 프록시에게 어떤일을 대신 시키는 것이다.
    - 구체적으로 인터페이스를 사용하고 실행시킬 클래스에 대한 객체가 들어갈 자리에 대리자 객체를 대신 투입한다.
    - 중요한 것은 흐름제어만 할 뿐이지 결과값을 조작하거나 변경시키면 안된다.
    - 프록시는 다른 객체에 대한 대체 또는 자리표시자를 제공할 수 있는 구조 디자인 패턴이다.
    - 프록시는 원래 객체에 대한 접근을 제어하므로 당신의 요청이 원래 객체에 전달되기 전 또는 후에 무언가를 수행할 수 있도록 한다.

2. 장점
    - 사이즈가 큰 객체가 로딩되기 전에도 프록시를 통해 참조를 할 수 있다.
    - 실제 객체의 public, protected 메서드를 숨기고 인터페이스를 통해 노출시킬 수 있다.
    - 로컬에 있지 않고 떨어져있는 객체를 사용할 수 있다.
    - 원래 객체에 접근에 대해 사전 처리를 할 수 있다.

3. 단점
    - 객체를 생성할 때 한 단계를 거치게 되므로, 빈번한 객체 생성이 필요한 경우 성능이 저하될 수 있다.
    - 프록시 내부에서 객체 생성을 위해 스레드가 생성, 동기화가 구현되어야 하는 경우 성능이 저하될 수 있다.
    - 로직이 난해해져 가독성이 떨어질 수 있다.

4. 다른 패턴과의 관계
    -

5. 예제
    - 예제 소스 : -

* 출처 : - https://limkydev.tistory.com/79
        - https://velog.io/@newtownboy/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4-%ED%94%84%EB%A1%9D%EC%8B%9C%ED%8C%A8%ED%84%B4Proxy-Pattern


