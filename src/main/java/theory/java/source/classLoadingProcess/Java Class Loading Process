1. Java Class Loading Process
    - .java 파일로 작성되었던 소스코드가 어떻게 JVM 가 로딩되는지 아는 것이 중요하다.
    - 클래스 로딩 때 발생하는 이슈를 해결할 수 있고 코드 상에서 동적으로 클래스를 로딩하는 구문을 이해할 수 있다.

2. 클래스 로딩 과정
    - Java 에서 클래스가 로딩 과정은 클래스 로더가 확장자가 .class 클래스 파일의 위치를 찾아 그것을 JVM 위에 올려놓는 과정을 뜻한다.
    - .class 확장자를 가진 클래스 파일을 로딩하기 전에 JVM 을 실행할 때 이미 JVM 을 실행하기 위해 여러 클래스 파일들을 미리 로딩했다는 것이다.
    1) 부트스트랩 로더
        - 위에 $JAVA_HOME/jre/lib/rt.jar 에서 rt.jar에 있는 JVM을 실행시키기 위한 핵심 클래스들을 로딩한다.
        - Java 어플리케이션 실행시 이 -verbose:class JVM 옵션을 주고 실행시키면 rt.jar에 있는 클래스 파일들이 무수하게 로딩되는 것을 확인 할 수 있다.

    2) 확장 클래스 로더
        - $JAVA_HOME/jre/lib/ext 경로에 위치해 있는 자바의 확장 클래스들을 로딩하는 역할을 한다.

    3) 시스템 클래스 로더
        - $CLASSPATH에 설정된 경로를 탐색하여 그곳에 있는 클래스들을 로딩하는 역할을 한다.

3. 클래스 로더의 특징
    1) 계층적 구조
        - 클래스 로더들은 부모-자식 관계의 계층적 구조를 가지고 있다.

    2) 로딩 요청 위임
        - 예를 들어 System Loader가 A라는 클래스를 로딩할 때 그 로딩 요청은 부모 로더들로 거슬러 올라가서 부트스트랩 로더에 다다른 후 그 밑으로 로딩 요청을 수행한다는 것을 의미한다.

    3) 가시성 제약 조건
        - 부모 로더에서 찾지 못한 클래스는 자식 로더를 이용해서 클래스를 찾지 못한다.
        - 반대로 자식 로더에서 찾지 못한 클래스는 부모 로더에게 위임해서 클래스를 찾을 수 있다.

    4) 언로드 불가
        - 클래스 로더에 의해 로딩된 클래스들은 다시 JVM 상에서 없앨 수 있다.


* 출처 : - https://engkimbs.tistory.com/606