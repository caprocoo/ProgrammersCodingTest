1. Git 이란?
    1) 형상 관리 도구 중 하나이다.
        : 형상 관리 도구는 버전 관리시스템이라고 하며, Git은 소프트웨어를 개발하는 기업의 핵심 자산인 소스코드를 효과적으로 관리할 수 있게 해주는 무료, 공개소프트웨어이다.

    2) SVN vs Git
        - Git이 SVN과 다른 점은 분산형 관리 시스템이라는 것이다.
        - SVN : 중앙 서버에 소스코드와 히스토리를 저장한다.
        - Git : SVN과 달리 소스코드를 여러 개발 PC와 저장소에 분산해서 저장한다.
        - 그렇기에 중앙 서버에 장애가 발생해도 로컬 저장소에 커밋을 할 수 있으며, 로컬 저장소들을 이용하여 중앙 저장소의 복원도 가능하다.
        - 사본을 로컬에서 관리하기 때문에 Git이 SVN에 비해 훨씬 빠르다.(SVN은 변경 로그 하나 보는 것도 인터넷을 경유해야 한다.)

2. Git 장점
    - 소스코드를 주고 받을 필요 없이, 같은 파일을 여러 명이 동시에 작업하는 병렬 개발이 가능하다.
    - 즉 브랜치를 통해 개발한 뒤, 본 프로그램에 합치는 방식(Merge)으로 개발을 진행할 수 있다.
    - 분산 버전관리이기 때문에 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있으며, 중앙 저장소가 날라가버려도 다시 원상복구할 수 있다.
    - 팀 프로젝트가 아닌, 개인 프로젝트일지라도 Git 을 통해 버전 관리를 하면 체계적인 개발이 가능해지고, 프로그램이나 패치를 배포하는 과정도 간단해진다. (pull을 통한 업데이트, patch 파일 배포)

3. Git vs GitHub
    - Git : 형상 관리 도구(버전 관리 시스템)
    - Github : 형상 관리 도구(버전 관리) 웹호스팅 서비스

    1) Git (형상 관리 도구)
        - 프로젝트를 진행하면서 소스 코드를 USB나 메일로 주고받는 건 엄청난 낭비 임과 동시에 보안성 위험이 있다.
          그렇기 때문에 프로젝트를 진행 함에 있어 형상 관리 도구를 사용 한다.
        - 형상 관리 도구를 사용하면 변경을 쉽게 되돌릴 수 있다. 소스코드를 과거의 특정 시점으로 되돌리거나, 특정 시점의 변경 사항을 취소하거나, 두 버전의 소스 코드를 비교하는 등의 일이 가능하다.

    2) GitHub
        - 협업하고 있는 코드를 저장할 서버가 필요하다.
        - 버전 관리 시스템을 지원하는 웹호스팅 서비스의 기능을 통해, push, pull request같은 이벤트에 반응하여 자동으로 작업(배포 등)을 실행하게 할 수 있다.
          ex) GitHub, GitLab, BitBucket



* 출처 : - https://goddaehee.tistory.com/91
