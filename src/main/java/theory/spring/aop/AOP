1. AOP
    - AOP 는 횡단 관심사의 분리를 허용함으로 모듈성을 증가시키는 것이 목적인 프로그래밍의 패러다임이다.
    - 횡단 관심사란 여러 비즈니스 로직이 수행될 때 서로 중복되는 로직이 존재하는지에 대한 관심사이다.
    - AOP 는 횡단 관심사를 모듈로써 사용할 수 있게 하는 개념으로 핵심 기능과 부가 기능이 있다.
    - 핵심 기능은 비즈니스 로직을 포함하는 기능, 부가 기능은 핵심 기능을 도와주는 부가적인 기능을 뜻한다.
    - AOP 는 애플리케이션에서의 관심사의 분리가 이루어져 부가 기능을 Aspect 라는 모듈 형태로 만들어서 설계하고 개발하는 방법을 뜻한다.

2. AOP 의 용어
    1) target
        - 핵심 기능을 담고 있는 모듈로, 부가 기능을 부여할 대상이 된다.

    2) advice
        - 타겟에 제공할 부가기능을 담고 있는 모듈을 뜻한다.

    3) join point
        - Advice 가 적용될 수 있는 위치이다.
        - 타겟 객체가 구현한 인터페이스의 모든 메서드는 Join Point 가 될 수 있다.

    4) point cut
        - 어드바이스를 적용할 타겟의 메서드를 선별하는 정규표현식이다.
        - 표현식은 execution 으로 시작하고, 메서드의 signature 를 비교하는 방식이다.

    5) aspect
        - AOP 의 기본 모듈로 싱글톤 형태의 객체로 존재한다.

    6) advisor
        - 어드바이스 + 포인트 컷으로 Spring AOP 에서만 사용한다.

    7) weaving
        - 포인트 컷에 의해 결정된 타겟의 조인 포인트에 부가기능(어드바이스)를 삽입하는 과정이다.
        - AOP 가 핵심기능에 영향을 주지 않으면서 필요한 어드바이스를 추가할 수있도록 하는 핵심적인 처리 과정이다.


* 출처 : - https://wonit.tistory.com/269