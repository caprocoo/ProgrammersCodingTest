1. 데코레이터 패턴이란?
    - 데코레이터 패턴은 주어진 상황 및 용도에 따라 어떤 객체에 책임을 동적으로 추가하는 패턴을 말한다.
    - 말 그대로 장식이라고 생각하며 편하며 기본 기능을 가지고 있는 클래스를 하나 만들어주고 추가할 수 있는 기능들을 추가하기 편하도록 설계하는 방식이다.

2. 구성요소
    - Component : 실질적인 인스턴스를 컨트롤하는 역할
    - ConcreteComponent : Component의 실질적인 인스턴스의 부분으로 책임의 주체 역할
    - Decorator : Component와 ConcreteDecorator를 동일시 하도록 해주는 역할
    - ConcreteDecorator : 실질적인 장식 인스턴스 및 정의이며 추가된 책임의 주체

3. 장점
    - 기존 코드를 수정하지 않고도 행동을 확장시킬 수 있다.
    - 구성과 위임을 통해 실행 중에 새로운 행동을 추가할 수 있다.

4. 단점
    - 의미없는 객체들이 너무 많이 추가될 수 있다.
    - 코드의 복잡성이 클 수 있다.

5. 예제
    - 예제 소스 : -

* 출처 : - https://coding-factory.tistory.com/713


